<EditDataFormTemplateSpec
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	ID="66ca4205-b8fd-4a61-b128-12642bf1c58b"
	Name="Inventory Process Business Process Edit Form"
	Description="Data form for editing inventory process business process parameters."
	Author="Technical Training"
	RecordType="Food Bank"
	DataFormInstanceID="984b2797-c378-485f-a744-f82321cd3b8b"
	common:SecurityUIFolder="Constituent\Food Bank\Inventory"
	xmlns:common="bb_appfx_commontypes"
	xmlns="bb_appfx_editdataformtemplate">
	<SPDataForm>
		<LoadImplementation SPName="USR_USP_DATAFORMTEMPLATE_EDITLOAD_INVENTORYPROCESSBUSINESS">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_EDITLOAD_INVENTORYPROCESSBUSINESS(
    @ID uniqueidentifier,
    @DATALOADED bit = 0 output,
    @TSLONG bigint = 0 output,
	@NAME nvarchar(100) = null output,
	@DESCRIPTION nvarchar(255) = null output,
	@IDSETREGISTERID uniqueidentifier = null output,
	@QUERYVIEWID uniqueidentifier = null output
)
as

	set nocount on;

	-- be sure to set these, in case the select returns no rows
	set @DATALOADED = 0
	set @TSLONG = 0

	-- populate the output parameters, which correspond to fields on the form.  Note that
	-- we set @DATALOADED = 1 to indicate that the load was successful.  Otherwise, the system
	-- will display a "no data loaded" message.  Also note that we fetch the TSLONG so that concurrency
	-- can be considered.
	select
		@DATALOADED = 1,
		@TSLONG = TSLONG,
		@NAME = NAME,
		@DESCRIPTION = DESCRIPTION,
		@IDSETREGISTERID = IDSETREGISTERID,
		@QUERYVIEWID = QUERYVIEWID
	from 
		dbo.USR_INVENTORYPROCESS
	where 
		ID = @ID

	return 0;
				]]>
			</common:CreateProcedureSQL>
		</LoadImplementation>
		<SaveImplementation SPName="USR_USP_DATAFORMTEMPLATE_EDIT_INVENTORYPROCESSBUSINESS">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_EDIT_INVENTORYPROCESSBUSINESS (
	@ID uniqueidentifier,
	@CHANGEAGENTID uniqueidentifier = null,
	@NAME nvarchar(100),
	@DESCRIPTION nvarchar(255),
	@IDSETREGISTERID uniqueidentifier,
	@QUERYVIEWID uniqueidentifier
)
as

	set nocount on;

	if @CHANGEAGENTID is null  
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output
				
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate()

	begin try
	
		-- handle updating the data
		update dbo.USR_INVENTORYPROCESS set
			NAME = @NAME,
			DESCRIPTION = @DESCRIPTION,
			IDSETREGISTERID = @IDSETREGISTERID,
			QUERYVIEWID = @QUERYVIEWID,
			CHANGEDBYID = @CHANGEAGENTID,
			DATECHANGED = @CURRENTDATE
		where 
			ID = @ID
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR
		return 1
	end catch

return 0;
				]]>
			</common:CreateProcedureSQL>
            <common:ExpectedDBExceptions>
                <common:Constraints>
                    <common:Constraint Name="CK_USR_INVENTORYPROCESS_NAME" Field="NAME" Type="Format" />
                    <common:Constraint Name="FK_USR_INVENTORYPROCESS_IDSETREGISTERID" Field="IDSETREGISTERID" Type="ForeignKey" />
                    <common:Constraint Name="FK_USR_INVENTORYPROCESS_QUERYVIEWID" Field="QUERYVIEWID" Type="ForeignKey" />
                    <common:Constraint Name="UC_USR_INVENTORYPROCESS_NAME" Field="NAME" Type="Unique" />
                </common:Constraints>
            </common:ExpectedDBExceptions>
		</SaveImplementation>
	</SPDataForm>

	<common:FormMetaData>
		<common:FormFields>
			<!-- Name and Description are pretty much the standard for business processes paremeters. -->
			<common:FormField FieldID="NAME" Caption="Name" DataType="String" MaxLength="100" Required="true" />
			<common:FormField FieldID="DESCRIPTION" Caption="Description" DataType="String" MaxLength="255" Multiline="true"  />
			<common:FormField FieldID="IDSETREGISTERID" Caption="Selection" DataType="Guid" Required="true">
				<!-- 
					This is the selection search list found in the Blackbaud.AppFx.Platform.Catalog.dll assembly
					This search has a FormField parameter called RECORDTYPE that is used to filter the search list down.
					Since I want ONLY a constituent selection, I did this override to force the search list to have the value
					"Constituent" in there(via the DefaultValueText value).
				-->
				<common:SearchList SearchListID="1f0e603c-1c55-4e1e-8218-bdb877b2cbe8" EnableQuickFind="true">
					<common:FormFieldOverrides>
						<common:FormFieldOverride FieldID="RECORDTYPE" Caption="Record type" ReadOnly="true" DefaultValueText="Constituent" />
					</common:FormFieldOverrides>
				</common:SearchList>
			</common:FormField>
			<!--
				This is another product simple data list.  This simple data list takes in 2 parameters @TAG and @RECORDTYPE 
				(both strings).  I pass these in to be "Inventory" and "Food Bank".  It will give a list of business process
				views (output formats) that have a record type of "Food Bank" and have a meta tag of "Inventory".
			-->
			<common:FormField FieldID="QUERYVIEWID" DataType="Guid" Caption="Output format" Required="true">
				<common:SimpleDataList SimpleDataListID="34B82F99-03E8-4421-9A0D-F815E02734FC">
					<common:Params>
						<common:Param ID="TAG">
							<common:Value>Inventory</common:Value>
						</common:Param>
						<common:Param ID="RECORDTYPE">
							<common:Value>Food Bank</common:Value>
						</common:Param>
					</common:Params>
				</common:SimpleDataList>
			</common:FormField>
		</common:FormFields>
		
		<common:WebUIComponent>
			<common:WebUI>
				<common:DefaultWebUI/>
			</common:WebUI>
		</common:WebUIComponent>
	</common:FormMetaData>
</EditDataFormTemplateSpec>