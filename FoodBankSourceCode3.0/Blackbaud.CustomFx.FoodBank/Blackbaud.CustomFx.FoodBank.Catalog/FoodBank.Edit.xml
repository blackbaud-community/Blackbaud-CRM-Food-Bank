<EditDataFormTemplateSpec 
    xmlns:c="bb_appfx_commontypes"
    ID="48815bdc-71b0-47b8-af7a-cf695b3f614b"
    Name="Food Bank Edit Form"
    Description="Used for editing the given Food Bank.   "
    Author="Technical Training"
    RecordType="Food Bank"
    DataFormInstanceID="938c22fc-4c3b-4b98-b3bd-e8a6ab46736b"
    c:SecurityUIFolder="Constituent\Food Bank"
    OwnerIDMapperID="00000000-0000-0000-0000-000000000000"
    xmlns="bb_appfx_editdataformtemplate"
    >
    <SPDataForm>
        <LoadImplementation SPName="USP_DATAFORMTEMPLATE_EDITLOAD_FOOD_BANK">
            <c:CreateProcedureSQL>
<![CDATA[
create procedure dbo.USP_DATAFORMTEMPLATE_EDITLOAD_FOOD_BANK
(
    @ID uniqueidentifier,
    @DATALOADED bit = 0 output,
    @TSLONG bigint = 0 output,
	@CONSTITUENTKEYNAME nvarchar(100) = Null output,
    @DESCRIPTION nvarchar(max) = null output,
    @MISSIONSTATEMENT nvarchar(max) = null output,
    @FOODBANKTYPECODEID uniqueidentifier = null output
)
as

	set nocount on;

	-- be sure to set these, in case the select returns no rows
	set @DATALOADED = 0
	set @TSLONG = 0

	-- populate the output parameters, which correspond to fields on the form.  Note that
	-- we set @DATALOADED = 1 to indicate that the load was successful.  Otherwise, the system
	-- will display a "no data loaded" message.  Also note that we fetch the TSLONG so that concurrency
	-- can be considered.
	select
		@DATALOADED = 1,
		@TSLONG = U.TSLONG,
		@CONSTITUENTKEYNAME = C.NAME,
        @DESCRIPTION = U.DESCRIPTION, 
        @MISSIONSTATEMENT = U.MISSIONSTATEMENT, 
        @FOODBANKTYPECODEID = U.FOODBANKTYPECODEID
		
		from dbo.USR_FOODBANK U
	INNER JOIN CONSTITUENT C ON C.ID = U.ID
	WHERE U.ID = @ID

	return 0;
]]>
</c:CreateProcedureSQL>
        </LoadImplementation>
        <SaveImplementation SPName="USP_DATAFORMTEMPLATE_EDIT_FOOD_BANK">
            <c:CreateProcedureSQL>
<![CDATA[
create procedure dbo.USP_DATAFORMTEMPLATE_EDIT_FOOD_BANK
(
	@ID uniqueidentifier,
	@CHANGEAGENTID uniqueidentifier = null,
    @DESCRIPTION nvarchar(max),
    @MISSIONSTATEMENT nvarchar(max),
    @FOODBANKTYPECODEID uniqueidentifier
)
as

	set nocount on;

	if @CHANGEAGENTID is null  
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output
						
	begin try
		-- handle updating the data
		update dbo.USR_FOODBANK set
            DESCRIPTION = @DESCRIPTION,
            MISSIONSTATEMENT = @MISSIONSTATEMENT,
            FOODBANKTYPECODEID = @FOODBANKTYPECODEID,

			CHANGEDBYID = @CHANGEAGENTID,
			DATECHANGED = getdate()
		where ID = @ID
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR
		return 1
	end catch

return 0;
]]>
</c:CreateProcedureSQL>
            <c:ExpectedDBExceptions>
                <c:Constraints>
                    <c:Constraint Name="FK_USR_FOODBANK_FOODBANKTYPECODEID" Field="FOODBANKTYPECODEID" Type="ForeignKey" />
                </c:Constraints>
            </c:ExpectedDBExceptions>
        </SaveImplementation>
    </SPDataForm>
  
    <c:FormMetaData FixedDialog="true">
        <c:FormFields>
			      <c:FormField FieldID="CONSTITUENTKEYNAME" Caption ="Constituent"  ReadOnly="true"/>
            <c:FormField FieldID="DESCRIPTION" Caption="Description" />
            <c:FormField FieldID="MISSIONSTATEMENT" Caption="Mission Statement" />
            <c:FormField FieldID="FOODBANKTYPECODEID" DataType="Guid" Caption="Food Bank Type" Required="true">
                <c:CodeTable CodeTableName="USR_FOODBANKTYPECODE" />
            </c:FormField>
        </c:FormFields>

    </c:FormMetaData>
  
  
</EditDataFormTemplateSpec>