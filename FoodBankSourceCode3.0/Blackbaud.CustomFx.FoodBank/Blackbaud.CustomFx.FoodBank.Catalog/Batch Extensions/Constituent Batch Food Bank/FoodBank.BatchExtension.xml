<BatchTypeExtensionSpec
	xmlns="bb_appfx_batchtypeextension"
	xmlns:common="bb_appfx_commontypes"
	Author="Technical Training"
	BaseTableName="USR_BATCHFOODBANK"
	BatchTypeCatalogID="A979005C-D15D-4A8A-8173-200318BB453A"
	Description="Batch extension to add food bank information for a constituent."
	ID="f38b46c8-b929-47e2-b3b3-ad6d65756df4"
	Name="Food Bank Batch Extension">

  <common:DependencyList>
    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll"
     CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.BatchFoodBank.Table.xml" />
    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll"
     CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.USR_USP_FOODBANK_BATCHEXTVALIDATE.xml" />
  </common:DependencyList>
  
	<AddRow  DataFormInstanceID="797378c7-6d14-4c7e-9474-78c587157a23" 
          DataFormTemplateID="1c7cdaf5-df7c-41f9-aa77-3134502c0fde" >
    
		<SaveImplementation SPName="USR_USP_DATAFORMTEMPLATE_ADD_BATCHFOODBANK">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_ADD_BATCHFOODBANK(
	@ID uniqueidentifier output,
	@DESCRIPTION nvarchar(max) = null,
	@MISSIONSTATEMENT nvarchar(max) = null,
	@FOODBANKTYPECODEID uniqueidentifier = null,
	@CHANGEAGENTID uniqueidentifier = null)
as	  
	  set nocount on;
		
	if @ID is null
		set @ID = newid()

	if @CHANGEAGENTID is null  
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output

    declare @CURRENTDATE datetime = getdate()

    begin try
	    insert into dbo.USR_BATCHFOODBANK(
			ID,
			DESCRIPTION,
			MISSIONSTATEMENT,
			FOODBANKTYPECODEID,
			ADDEDBYID,
			CHANGEDBYID,
			DATEADDED,
			DATECHANGED)
		values(
			@ID,
			@DESCRIPTION,
			@MISSIONSTATEMENT,
			@FOODBANKTYPECODEID,
			@CHANGEAGENTID,
			@CHANGEAGENTID,
			@CURRENTDATE,
			@CURRENTDATE)
		End try
	begin catch
	  exec dbo.USP_RAISE_ERROR;
	  return 1;
	end catch	
	return 0;							 
						  ]]>
			</common:CreateProcedureSQL>


      <common:ExpectedDBExceptions>
        <common:Constraints>
          <common:Constraint Name="FK_USR_BATCHFOODBANK_FOODBANKTYPECODEID" Field="FOODBANKTYPECODEID" Type="ForeignKey" />
          
        </common:Constraints>
      </common:ExpectedDBExceptions>
      
      
		</SaveImplementation>
    
	</AddRow>
  
	<EditRow DataFormInstanceID="cd9499cb-e5bf-4569-b955-244299a57ab0" 
           DataFormTemplateID="e3d526db-ae75-4d73-be2b-0d344af076ea">
    
		<LoadImplementation SPName="USR_USP_DATAFORMTEMPLATE_EDITLOAD_BATCHFOODBANK">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_EDITLOAD_BATCHFOODBANK(
	@ID uniqueidentifier,
	@DESCRIPTION nvarchar(max) = null output,
	@MISSIONSTATEMENT nvarchar(max) = null output,
	@FOODBANKTYPECODEID uniqueidentifier = null output,
	@TSLONG bigint = 0 output,
	@DATALOADED bit = 0 output
)
as
	set nocount on;

	set @DATALOADED = 0;
	set @TSLONG = 0;

	-- populate the output parameters, which correspond to fields on the form.  Note that
	-- we set @DATALOADED = 1 to indicate that the load was successful.  Otherwise, the system
	-- will display a "no data loaded" message.  Also note that we fetch the TSLONG so that concurrency
	-- can be considered.
	select
		@DATALOADED = 1,
		@DESCRIPTION = DESCRIPTION,
		@MISSIONSTATEMENT = MISSIONSTATEMENT,
		@FOODBANKTYPECODEID = FOODBANKTYPECODEID,
		@TSLONG = TSLONG
	from
		dbo.USR_BATCHFOODBANK
	where
		ID = @ID
    
	return 0;  
					    ]]>
			</common:CreateProcedureSQL>
		</LoadImplementation>
    
		<SaveImplementation SPName="USR_USP_DATAFORMTEMPLATE_EDITSAVE_BATCHFOODBANK">
			<common:CreateProcedureSQL>
				<![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_EDITSAVE_BATCHFOODBANK(
	@ID uniqueidentifier,
	@DESCRIPTION nvarchar(max),
	@MISSIONSTATEMENT nvarchar(max),
	@FOODBANKTYPECODEID uniqueidentifier,
	@CHANGEAGENTID uniqueidentifier = null
)
as								 
	set nocount on;
  
	if @CHANGEAGENTID is null  
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output
				
	declare @CURRENTDATE datetime = getdate() 
	
	begin try
		update dbo.USR_BATCHFOODBANK set
			DESCRIPTION = @DESCRIPTION,
			MISSIONSTATEMENT = @MISSIONSTATEMENT,
			FOODBANKTYPECODEID = @FOODBANKTYPECODEID,
			CHANGEDBYID = @CHANGEAGENTID,
			DATECHANGED = @CURRENTDATE
		where
			ID = @ID	
	End try
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch									 
						  ]]>
			</common:CreateProcedureSQL>

      <common:ExpectedDBExceptions>
        <common:Constraints>
          <common:Constraint Name="FK_USR_BATCHFOODBANK_FOODBANKTYPECODEID" Field="FOODBANKTYPECODEID" Type="ForeignKey" />
         
        </common:Constraints>
      </common:ExpectedDBExceptions>

    </SaveImplementation>
    
	</EditRow>

  <CommitRow>
    
    <AddRow ContextRecordType="Constituent"
            DataFormInstanceID="4878d9c2-bb1f-4abb-aa7b-ea16623d96d4"
            DataFormTemplateID="9edf325e-1cb1-404d-8fb8-5c50c0ee8aed"
            RecordIDParameter="CONSTITUENTID">
      <SaveImplementation SPName="USR_USP_DATAFORMTEMPLATE_COMMITADD_BATCHFOODBANK">
        <common:CreateProcedureSQL>
          <![CDATA[
create procedure dbo.USR_USP_DATAFORMTEMPLATE_COMMITADD_BATCHFOODBANK(	
	@ID uniqueidentifier output,
	@CONSTITUENTID uniqueidentifier,
	@DESCRIPTION nvarchar(max) = null,
	@MISSIONSTATEMENT nvarchar(max) = null,
	@FOODBANKTYPECODEID uniqueidentifier = null,
	@CHANGEAGENTID uniqueidentifier = null)
AS
	set nocount on;
	 
	DECLARE @FoodBankTypeCodeCountID as uniqueidentifier
	DECLARE @CONSTITUENCYID as uniqueidentifier
	DECLARE @CURRENTDATE datetime = getdate()
	
	BEGIN TRY
		-- check to see if constituent is an organziation if not then error will be raised.
		EXEC USR_USP_FOODBANK_BATCHEXTVALIDATE @CONSTITUENTID, @FOODBANKTYPECODEID

  
		insert into dbo.USR_FOODBANK(
			ID,
			CONSTITUENTID,
			DESCRIPTION,
			MISSIONSTATEMENT,
			FOODBANKTYPECODEID,
			ADDEDBYID,
			CHANGEDBYID,
			DATEADDED,
			DATECHANGED)
		values(
			@CONSTITUENTID,
			@CONSTITUENTID,
			@DESCRIPTION,
			@MISSIONSTATEMENT,
			@FOODBANKTYPECODEID,
			@CHANGEAGENTID,
			@CHANGEAGENTID,
			@CURRENTDATE,
			@CURRENTDATE)
      
			-- MAKE SURE WE HAVE A FOOD BANK USER DEFINED 
      -- CONSTITUENCY IN THE CONSTITUENCYCODE TABLE
			SELECT @FoodBankTypeCodeCountID = ID
			FROM CONSTITUENCYCODE
			WHERE DESCRIPTION = 'Food Bank'
    
			-- IF WE DONT,  ADD ONE TO THE CONSTITUENCYCODE  TABLE
		   IF @FoodBankTypeCodeCountID IS NULL
		   BEGIN
				EXEC dbo.[USP_CONSTITUENCYCODE_CREATEENTRY] @DESCRIPTION=N'Food Bank',@ACTIVE=1,@CHANGEAGENTID=@CHANGEAGENTID
		   
			SELECT @FoodBankTypeCodeCountID = ID
			FROM CONSTITUENCYCODE
			WHERE DESCRIPTION = 'Food Bank'
		   END
 
		   -- ADD THE NEW ORGANIZATION/CONSTITUENT TO THE USER DEFINED CONSTITUENCY
		   EXEC  dbo.USP_DATAFORMTEMPLATE_ADD_CONSTITUENCY  
			@CONSTITUENCYID output
			, @CHANGEAGENTID
			, @CONSTITUENTID
			, @FoodBankTypeCodeCountID
	
	END TRY
   
  BEGIN CATCH
		exec dbo.USP_RAISE_ERROR;
		return 1;
	END CATCH

	RETURN 0;	
          ]]>
        </common:CreateProcedureSQL>

        <common:ExpectedDBExceptions>
          <common:Constraints>
            <common:Constraint Name="FK_USR_FOODBANK_FOODBANKTYPECODEID" Field="FOODBANKTYPECODEID" Type="ForeignKey" />
          </common:Constraints>
          <common:CustomExceptions>      
            <common:Exception Field="DESCRIPTION" SearchText="Constituent is not an organization">
              <common:CustomErrorMsg>Constituent is not an organization. Can not add food bank data.</common:CustomErrorMsg>
            </common:Exception>
            <common:Exception Field="FOODBANKTYPECODEID" SearchText="Food Bank Type Code is required">
              <common:CustomErrorMsg>Food Bank Type Code is required</common:CustomErrorMsg>
            </common:Exception>
          </common:CustomExceptions>
        </common:ExpectedDBExceptions>
        
      </SaveImplementation>
    </AddRow>
  </CommitRow>

	<!-- optionally, list any client-side event handlers that will be plugged into the event model for the batch data entry form.  Each handler
	refers to a class that inherits from Browser.Batch.BatchEntryHandler -->
	<!--<EventHandler AssemblyName="REPLACE_WITH_ASSEMBLYNAME" ClassName="REPLACE_WITH_CLASSNAME"/>-->

 	<!-- describe fields on the form, which correspond to parameters on the SP.  Note that system paramters 
	like the record ID, DATALOADED, TSLONG, and CURRENTAPPUSERID need not be listed. -->
	<common:FormMetaData>
		<common:FormFields>
			<common:FormField FieldID="DESCRIPTION" Caption="Description" DataType="String" Multiline="true" Category="Food bank" />
			<common:FormField FieldID="MISSIONSTATEMENT" Caption="Mission statement" DataType="String" Multiline="true" Category="Food bank" />
			<common:FormField FieldID="FOODBANKTYPECODEID" Caption="Type" DataType="Guid" Category="Food bank">
				<common:CodeTable CodeTableName="USR_FOODBANKTYPECODE" />
			</common:FormField>
		</common:FormFields>
	</common:FormMetaData>
</BatchTypeExtensionSpec>

