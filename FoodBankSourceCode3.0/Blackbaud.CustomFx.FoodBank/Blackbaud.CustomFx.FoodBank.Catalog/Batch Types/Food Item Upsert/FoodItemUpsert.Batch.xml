<BatchTypeSpec 
    xmlns:common="bb_appfx_commontypes"
    ID="e04e78c2-6995-41fe-b81a-63dbff1fa2fd"
    Name="Food Item Upsert Batch"
    Description="Batch type for adding and updating food item records."
    Author="Technical Training"
    BaseTableName="USR_BATCHFOODITEMUPSERT"
    Category="Food Item"
    xmlns="bb_appfx_batchtype">
  
	<common:DependencyList>
    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.USR_USP_DATAFORMTEMPLATE_ADD_FOOD_ITEMUPSERTBATCH.xml" />

    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.USR_USP_DATAFORMTEMPLATE_EDIT_FOOD_ITEMUPSERTBATCH.xml" />
    
    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.USR_USP_DATAFORMTEMPLATE_EDITLOAD_FOOD_ITEMUPSERTBATCH.xml" />

    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertBatch.Add.xml" />
		<common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertBatch.Edit.xml" />
		<common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertBatchDelete.RecordOperation.xml" />
		<common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertBatchCommit.Add.xml" />
		<common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll" 
                       CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertBatchCommit.Edit.xml" />
    <common:Dependency CatalogAssembly="Blackbaud.CustomFx.FoodBank.Catalog.dll"
                    CatalogItem="Blackbaud.CustomFx.FoodBank.Catalog.FoodItemUpsertDupCheck.Search.xml"/>
	</common:DependencyList>
	<AddRowDataFormTemplate CatalogItemID="e83755e4-694a-4eea-99ff-eab81d3a72c2" />
	<EditRowDataFormTemplate CatalogItemID="c4a41016-2b3c-47d4-b95e-5f8021160cac" />
	
  <CommitRowDataForms>
		<CommitRowAddDataFormTemplate CatalogItemID="910a6859-90f6-437f-bf7d-b585043ee11e" />
    <CommitRowEditDataFormTemplate CatalogItemID="3c26a729-a52f-42c3-bc1d-399d9fb91546" 
                                   EditLoadField="PRIMARYRECORDID" />
	</CommitRowDataForms>
	
  <BatchDeleteRowRecordOperation CatalogItemID="7ed9f4d5-d996-4ad5-b764-4822887efbcf" />

  <EventHandlers>
    <BatchEventHandler AssemblyName="Blackbaud.CustomFx.FoodBank.Client"
                       ClassName="Blackbaud.CustomFx.FoodBank.Client.FoodItemAddBatchEventHandler"/>
  </EventHandlers>

  <!--
  DuplicateRecordCheck
  
  SearchListID - the id of the "Food Item Search" search list. 
      finds food items that match criteria "NAME like @NAME"
      Field ID within batch must match search list filter field

  IdentifiedDuplicateActionToPerform - Options are either "Delete" or "Update"
  Delete:  when the duplicate is managed by the end user within the batch user interface grid,
  so the row will be delete from the batch row because we do not want duplicates.
  Update:  (Update/Upsert Batch Only) Update the link form field defined by LinkFieldID attribute,
  with the ID value returned from the search list.  
  This will signal to update the row for the update batch.  This food item batch type is an
  update/upsert batch so we will, select Update as the value, instead of using Delete.  
  -->
  
  <DuplicateRecordCheck
  
    SearchListID="06d038db-2591-49eb-a9fd-a708440992ce"
    
    DuplicateResolutionHeaderCaption="Resolve Duplicate"
    IdentifiedDuplicateActionToPerform="Update" LinkFieldID="PRIMARYRECORDID"
    IdentifiedDuplicateActionCaption="Update Duplicate">

    <NoMatchMsg MessageText="No duplicates found" 
                MessageTextResourceKey="$$no_matches_found" />
    <SingleMatchMsg MessageText="Single duplicate found" 
                    MessageTextResourceKey="$$single_match_found" />
    <MultipleMatchesMsg MessageText="Multiple food items already exist 
                        in the database with this name."/>

    <!-- BulkAddDuplicateRecordCheck
    Provide meta data on what do do with rows on batch save request (Infintiy Web API) or Import.
     NoMatch:  If there are no results returned from the duplicate search, what do you want to do? 
    
    Bulk Add =  api request or import
    Example:  adding 3 rows via import:  Apples, Bananas, Mangoes
    if no Apples with dup search, 
      NoMatch tag's ActionType attribute = "Add" so add row to batch staging table.
    if Bananas has single match, 
      SingleMatch tag's ActionType attribute = "Update", so update batch row with food item id (PRIMARYRECORDID)
    if Mangoes, multple matches, 
      MultipleMatches tag's ActionType attribute = "RowMessage" so add row message saying multiple matches found.
    
    When batch user interface is opened, Bananas has yellow error message, click and search is opened with dup results, 
    single match found so the IdentifiedDuplicateActionToPerform says to "Update" and that removes it from the batch row because
    we dont want dups.   
    
    If you are doing an update batch then the LinkFieldID="" comes into play. 
    if you BulkAddDuplicateRecordCheck or when "Update" then you update the link form field with
    the id coming back from the search list. -->
    <BulkAddDuplicateRecordCheck>
      <NoMatch ActionType="Add"/>
      <SingleMatch ActionType="Update"/>
      <MultipleMatches ActionType="RowMessage"/>
    </BulkAddDuplicateRecordCheck>

  </DuplicateRecordCheck>
</BatchTypeSpec>